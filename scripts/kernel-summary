#!/usr/bin/perl -w
# Keep track of Linux kernel versions and ABI bumps
use strict;

use File::Slurp;
use Email::MIME;
use Email::Sender::Simple qw(sendmail);
use List::MoreUtils qw(uniq);
use Sort::Versions;


sub colorize_flavours {
  my ($arch, $abi, $lastabi, %v) = @_;
  my $cell;
  if ($v{$arch}{$abi}) {
    foreach my $flavour (@{$v{$arch}{$abi}}) {
      my $color;
      if (($abi ne $lastabi) && $v{$arch}{$lastabi}) {
        if (grep { $_ eq $flavour } @{$v{$arch}{$lastabi}}) {
          # Available in a newer ABI, can be decrufted:
          $color='darkorange';
        }
        else {
          # Not available in newer ABI, possibly dropped:
          $color='purple';
        }
      }
      if (($abi ne $lastabi) && !$v{$arch}{$lastabi}) {
        # Not built yet:
        $color='red';
      }
      if ($color) {
        $cell .= "<span style=\"color: $color;\">$flavour</span><br/>";
      }
      else {
        $cell .= "$flavour<br/>";
      }
    }
  }
  $cell ||= "&nbsp;";
  return "<td>$cell</td>\n";
}

sub compare_and_mail {
  my ($dist, $lastabi, $summary, $url) = @_;
  if (-f $summary) {
    foreach my $line (read_file($summary)) {
      if ($line =~ /<!-- ABI: (.*) in (.*) -->/) {
        my $previous_lastabi = $1;
        my $previous_dist = $2;
        if (($dist eq $previous_dist) and ($lastabi ne $previous_lastabi)) {
          my $body = "Linux kernel ABI bump in $dist: from $previous_lastabi to $lastabi\n\nFull summary: $url\n";
          my $message = Email::MIME->create(
            header_str => [
              From    => 'Linux kernel watcher <debian-boot@lists.debian.org>',
              To      => 'debian-boot@lists.debian.org',
              Subject => "Linux kernel ABI bump in $dist: from $previous_lastabi to $lastabi",
            ],
            attributes => {
              encoding => "quoted-printable",
              charset  => "UTF-8",
            },
            body_str => $body,
          );
          sendmail($message);
        }
      }
    }
  }
  # Beware: keep in sync with the match above
  return "<!-- ABI: $lastabi in $dist -->";
}


my $summary = shift @ARGV || "kernel-summary.html";
my $url = "http://d-i.debian.org/kernel-summary.html";

my $html;
foreach my $dist (qw(testing sid experimental)) {

my @lines = `rmadison -S linux -s $dist|grep linux-image-`;
my @allabis;
my @allarchs;
my %v;
foreach my $line (@lines) {
  chomp $line;
  my ($package, $version, $dist, $archs) = split /\s*[|]\s*/, $line;
  $package =~ s/\s*linux-image-//;
  (my $abi = $package) =~ s/(-[\d+])-.*/$1/;
  (my $flavour = $package) =~ s/.*?-[\d+]-//;
  #print "$abi; $package; $version; $dist; $archs\n";
  foreach my $arch (split /,\s*/, $archs) {
    push @{$v{$arch}{$abi}}, $flavour;
    push @allarchs, $arch;
  }
  push @allabis, $abi;
}

### Sort and uniquify:
@allarchs = uniq sort @allarchs;
@allabis = uniq sort { versioncmp($a,$b) } @allabis;
my $lastabi = $allabis[-1];

### Compare with previous ABI if relevant:
my $abi_comment = compare_and_mail($dist, $lastabi, $summary, $url);

### Output:
$html .= "<h1>Linux kernel status in $dist</h1>\n";
$html .= "$abi_comment\n";
$html .= "<p>Top-most ABI: $lastabi</p>\n";
$html .= "<table border=1 cellpadding=3 style=\"border-collapse: collapse;\">\n";
# First row, with archs:
$html .= "<tr>\n";
$html .= "<th></th>\n";
foreach my $arch (@allarchs) {
  $html .= "<th>$arch</th>\n";
}
$html .= "</tr>\n";
# Actual contents:
foreach my $abi (@allabis) {
  $html .= "<tr>\n";
  $html .= "<th>$abi</th>\n";
  foreach my $arch (@allarchs) {
    $html .= colorize_flavours($arch, $abi, $lastabi, %v);
  }
  $html .= "</tr>\n";
}
$html .= "</table>\n";
}


my $date = `LC_ALL=C TZ=UTC date`;
chomp $date;
$html .= "<hr/>\n";
$html .= "Last update: $date\n";

write_file($summary, $html);
