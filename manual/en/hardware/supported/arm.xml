<!-- retain these comments for translator revision tracking -->
<!-- $Id$ -->


  <sect2 arch="arm"><title>CPU, Main Boards, and Video Support</title>

<para>

ARM systems are much more heterogeneous than the i386/amd64-based PC
architecture, so whilst 64-bit ARM machines should boot in a
standardised way, like PCs, the situation is more complicated for
32-bit ARM machines.

</para>

<para>
The ARM architecture is used mainly in so-called
<quote>systems-on-chip</quote> (SoCs). These SoCs are designed by many
different companies with vastly varying hardware components even for
the very basic functionality required to bring the system up. System
firmware interfaces have been increasingly standardised over time, but
especially on older hardware firmware/boot interfaces vary a great
deal, so on these systems the Linux kernel has to take care of many
system-specific low-level issues which are handled by the mainboard's
BIOS in the PC world.

</para>

<para>
At the beginning of the ARM support in the Linux kernel, the hardware
variety resulted in the requirement of having a separate kernel for
each ARM system in contrast to the <quote>one-fits-all</quote> kernel
for PC systems.  As this approach does not scale to a large number of
different systems, work was done to allow booting with a single ARM
kernel that can run on different ARM systems.  Support for newer ARM
systems gets implemented in a way that allows the use of such a
multiplatform kernel, but for several older systems a separate
specific kernel is still required.
</para>

<para>
Because of this, the standard &debian; distribution only supports
installation on a selected number of older 32-bit ARM systems in
addition to the newer (32 and 64-bit) systems which are supported by
the ARM multiplatform kernels (called 'armmp' on 32-bit armhf, no
flavour name on 64-bit arm64).

</para>

<para>
The ARM architecture has evolved over time and modern ARM processors
provide features which are not available in older models.  &debian;
therefore provides three ARM ports: the &debian;/arm64 port for all
64-bit machines, and the &debian;/armel and the &debian;/armhf ports
for 32-bit machines.  &debian;/armel targets older ARM processors
without support for a hardware floating point unit (FPU), while
&debian;/armhf works only on newer ARM processors which implement at
least the ARMv7 architecture with version 3 of the ARM vector floating
point specification (VFPv3).  &debian;/armhf makes use of the extended
features and performance enhancements available on these models.
&debian;/arm64 works on processors which implement at least the ARMv8
architecture (which is 64bit).
</para>

<!--
<para>

While it is technically possible to run the &debian;/armel userland
programs on modern (ARMv7) ARM processors, they cannot make use of
several performance-enhancing features of the newer processors, so if
your hardware fulfils the requirements of running the &debian;/armhf
port, you should use it instead of the &debian;/armel port.  Mixing of
armel and armhf packages on the same system is possible (using
multi-arch), but is not normally recommended, so you need to decide
which port to use before installing the system. Similarly both the
32-bit ports (&debian;/armel and &debian;/armhf) will run on 64-bit
ARMv8 hardware but will treat them as 32-bit machines, limiting
maximum memory size and various newer hardware features, so you will
normally want to install &debian;/arm64 on 64-bit capable
hardware. The situation is a bit like that with i386/amd64 PCs, but
unlike x86 world, it is rarely sensible to install a 32-bit
userland on a 64-bit machine for ARM.

</para>
-->

<para>
Technically, all currently available ARM CPUs can be run in either
endian mode (big or little), but in practice the vast majority use
little-endian mode. All of &debian;/arm64, &debian;/armhf and
&debian;/armel support only little-endian systems.
</para>

<sect3 arch="arm"><title>Platforms supported by Debian/arm64</title>

  <para>
    Arm64/AArch64/ARMv8 hardware became available quite late in the
    &debian; &releasename-cap; release cycle so not many platforms have had
    support merged in the mainline kernel version in this release,
    which is the main requirement to have &d-i; working on
    them.

  </para>

  <para>
    The tested platforms are listed below, but in general, the
    multiplatform support in the arm64 Linux kernel also allows
    running &d-i; on arm64 systems not explicitly listed below, so
    long as the kernel used by &d-i; has support for the target
    system's components and a device-tree file for the target is
    available.  In these cases, the installer can usually provide a
    working userland installation, and so long as UEFI is in use, it
    should be able to make the system bootable as well. If UEFI is not
    used (some 64-bit machines have been shipped with U-Boot) you will
    probably also need some manual steps to make the system bootable.
    
  </para>

<para>The following platforms are known to be supported by
&debian;/arm64 in this release. There is only one kernel, which
supports all the listed platforms.
</para>

  <variablelist>
      <varlistentry>
        <term>Applied Micro (APM) Mustang/X-Gene</term>
        <listitem>
          <para>
	    The APM Mustang was the first Linux-capable ARMv8 system
	    available. It uses the X-gene SoC, since also used in
	    other machines, which is an 8-core CPU, with ethernet,
	    USB, serial. A common form-factor looks just like a
	    desktop PC box, but many versions are expected. Most of
	    the hardware is supported in the mainline kernel, but USB
	    support is lacking in the &releasename-cap; kernel.
          </para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term>ARM Juno Development Platform</term>
        <listitem>
          <para>	    
	    Juno is a capable development board with a 6-core (2xA57,
	    4xA53) ARMv8-A 800Mhz CPU, Mali (T624) graphics, 8GB DDR3
	    RAM, Ethernet, USB, Serial. It was designed for system
	    bring-up and power testing so is neither small nor cheap,
	    but was one of the first boards available. All the
	    hardware is supported in the mainline kernel and in
	    &releasename-cap;.
          </para>
        </listitem>
      </varlistentry>

  </variablelist>

  <para>
    When using &d-i; on non-UEFI systems, you may have to manually
    make the system bootable at the end of the installation, e.g. by
    running the required commands in a shell started from within
    &d-i;. flash-kernel knows how to set up an X-Gene system booting
    with U-Boot.
  </para>
</sect3>


<sect3 arch="arm" id="armhf-armmp-supported-platforms"><title>Platforms supported by Debian/armhf</title>

  <para>
  The following systems are known to work with &debian;/armhf using the
  multiplatform (armmp) kernel:

  <variablelist>

      <varlistentry>
        <term>Freescale MX53 Quick Start Board</term>
        <listitem>
          <para>   
            The IMX53QSB is a development board based on the i.MX53 SoC.
          </para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term>Versatile Express</term>
        <listitem>
          <para>   
            The Versatile Express is a development board series from ARM
            consisting of a baseboard which can be equipped with various CPU
            daughter boards.
          </para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term>Certain Allwinner sunXi-based development boards and embedded
        systems</term>
        <listitem>
          <para>   
            The armmp kernel supports several development boards and
            embedded systems based on the Allwinner A10 (architecture
            codename <quote>sun4i</quote>), A10s/A13 (architecture codename
            <quote>sun5i</quote>) and A20 (architecture codename
            <quote>sun7i</quote>) SoCs.  Full installer support is currently
            available for the following sunXi-based systems:
            <itemizedlist>
             <listitem><para>
               Cubietech Cubieboard 1 + 2 / Cubietruck
             </para></listitem>
             <listitem><para>
               LeMaker Banana Pi and Banana Pro
             </para></listitem>
             <listitem><para>
               LinkSprite pcDuino and pcDuino3
             </para></listitem>
             <listitem><para>
               Mele A1000
             </para></listitem>
             <listitem><para>
               Miniand Hackberry
             </para></listitem>
             <listitem><para>
               Olimex A10-Olinuxino-LIME / A10s-Olinuxino Micro /
               A13-Olinuxino / A13-Olinuxino Micro / 
               A20-Olinuxino-LIME / A20-Olinuxino-LIME2 / A20-Olinuxino Micro           
             </para></listitem>
             <listitem><para>
               PineRiver Mini X-Plus
             </para></listitem>

            </itemizedlist>  
          </para> 
          <para>
            System support for Allwinner sunXi-based devices is limited to
            drivers and device-tree information available in the mainline
            Linux kernel.  The android-derived linux-sunxi.org 3.4 kernel
            series is not supported by Debian.
          </para> 
          <para>
            The mainline Linux kernel generally supports serial console,
            ethernet, SATA, USB and MMC/SD-cards on Allwinner A10, A10s/A13
            and A20 SoCs, but it does not have native drivers for the
            display (HDMI/VGA/LCD) and audio hardware in these SoCs.  The
            NAND flash memory that is built into some sunXi-based systems is
            not supported.
          </para>
          <para>
            Using a local display is technically possible without native
            display drivers via the <quote>simplefb</quote> infrastructure
            in the mainline kernel, which relies on the
            <quote>U-Boot</quote> bootloader for initialising the display
            hardware, but this is not supported by the U-Boot version in
            &debian; 8.
          </para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term>SolidRun Cubox-i2eX / Cubox-i4Pro</term>
        <listitem>
          <para>
            The Cubox-i series is a set of small, cubical-shaped systems
            based on the Freescale i.MX6 SoC family.  System support for
            the Cubox-i series is limited to drivers and device-tree
            information available in the mainline Linux kernel; the
            Freescale 3.0 kernel series for the Cubox-i is not supported by
            Debian.  Available drivers in the mainline kernel include
            serial console, ethernet, USB, MMC/SD-card and display
            support over HDMI (console and X11). In addition to that,
            the eSATA port on the Cubox-i4Pro is supported.
          </para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term>Wandboard Quad</term>
        <listitem>
          <para>
            The Wandboard Quad is a development board based on the Freescale
            i.MX6 Quad SoC.  System support for it is limited to drivers and
            device-tree information available in the mainline Linux kernel;
            the wandboard-specific 3.0 and 3.10 kernel series from
            wandboard.org are not supported by Debian.  The mainline kernel
            includes driver support for serial console, display via HDMI
            (console and X11), ethernet, USB, MMC/SD and SATA.  Support for
            the onboard audio options (analog, S/PDIF, HDMI-Audio) and for
            the onboard WLAN/Bluetooth module is not available in &debian;
            8.
          </para>
        </listitem>
      </varlistentry>

    </variablelist>
  </para>

  <para>
    
    Generally, the ARM multiplatform support in the Linux kernel allows
    running &d-i; on armhf systems not explicitly listed above, as long as
    the kernel used by &d-i; has support for the target system's components
    and a device-tree file for the target is available.  In these cases, the
    installer can usually provide a working userland installation, but it
    probably cannot automatically make the system bootable, as doing that in
    many cases requires device-specific information.
   
  </para>
  <para>
    When using &d-i; on such systems, you may have to manually make
    the system bootable at the end of the installation, e.g. by
    running the required commands in a shell started from within
    &d-i;.
  </para>

</sect3>

<sect3 arch="arm"><title>Platforms no longer supported by Debian/armhf</title>

<variablelist>
<varlistentry>
<term>EfikaMX</term>
<listitem><para>

The EfikaMX platform (Genesi Efika Smartbook and Genesi EfikaMX
nettop) has been supported in &debian; 7 with a platform-specific
kernel, but is no longer supported from &debian; 8 onwards.  The code
required to build the formerly used platform-specific kernel has been
removed from the upstream Linux kernel source in 2012, so Debian
cannot provide newer builds. </para><para> Using the armmp
multiplatform kernel on the EfikaMX platform would require device-tree
support for it, which is currently not available.

</para></listitem>
</varlistentry>
</variablelist>


</sect3>


<sect3 arch="arm"><title>Platforms supported by Debian/armel</title>

<para>

The following platforms are supported by &debian;/armel; they require
platform-specific kernels.

<variablelist>

<varlistentry>
<term>IXP4xx</term>
<listitem><para>   

The Intel IXP4xx processor series is used in network attached storage
devices like the Linksys NSLU2.

</para><para>

While there is kernel support for this platform in &debian; 8, it is not
supported by the &d-i;.  It is possible to do a <quote>dist-upgrade</quote>
from Debian 7 to Debian 8 for existing installations, though.  Due to the
low amount of RAM that systems based on the IXP4xx usually have, this
requires that swap space is enabled prior to upgrading. Support for the
IXP4xx platform will be dropped completely in &debian; 9.

</para></listitem>
</varlistentry>   

<varlistentry>
<term>Kirkwood</term>
<listitem><para>

Kirkwood is a system on a chip (SoC) from Marvell that integrates an ARM
CPU, Ethernet, SATA, USB, and other functionality in one chip.  We
currently support the following Kirkwood based devices: OpenRD
(OpenRD-Base, OpenRD-Client and OpenRD-Ultimate), <ulink
url="&url-arm-cyrius-sheevaplug;">plug computers (SheevaPlug, GuruPlug and
DreamPlug)</ulink>, <ulink url="&url-arm-cyrius-qnap-kirkwood;">QNAP
Turbo Station</ulink> (all TS-11x, TS-21x and TS-41x models), and LaCie
NASes (Network Space v2, Network Space Max v2, Internet Space v2, d2
Network v2, 2Big Network v2 and 5Big Network v2).

</para></listitem>
</varlistentry>

<varlistentry>
<term>Orion5x</term>
<listitem><para>

Orion is a system on a chip (SoC) from Marvell that integrates an ARM CPU,
Ethernet, SATA, USB, and other functionality in one chip. There are many
Network Attached Storage (NAS) devices on the market that are based on an
Orion chip. We currently support the following Orion based devices: <ulink
url="&url-arm-cyrius-kuroboxpro;">Buffalo Kurobox</ulink>, <ulink
url="&url-arm-cyrius-dns323;">D-Link DNS-323</ulink> and <ulink
url="&url-arm-cyrius-mv2120;">HP mv2120</ulink>.

</para></listitem>
</varlistentry>

<varlistentry>
<term>Versatile</term>
<listitem><para>

The Versatile platform is emulated by QEMU and is therefore a nice way to
test and run &debian; on ARM if you don't have the hardware.

</para></listitem>
</varlistentry>

</variablelist>

</para>
</sect3>

<sect3 arch="arm"><title>Platforms no longer supported by Debian/armel</title>

<variablelist>
<varlistentry>
<term>IOP32x</term>
<listitem><para>

Intel's I/O Processor (IOP) line is found in a number of products
related to data storage and processing, such as the <ulink
url="&url-arm-cyrius-glantank;">GLAN Tank</ulink> from IO-Data and the
<ulink url="&url-arm-cyrius-n2100;">Thecus N2100</ulink>.  &debian;
has supported the IOP32x platform in &debian; 7, but does not support
it any longer from version 8 on due to hardware constraints of the
platform which make it unsuitable for the installation of newer
&debian; releases.

</para></listitem>
</varlistentry>

<varlistentry>
<term>MV78xx0</term>
<listitem><para>

The MV78xx0 platform has been used on the Marvell DB-78xx0-BP
development board.  It was supported in Debian 7 with a platform-specific
kernel (based on the Linux kernel version 3.2), but is not supported
any more from Debian 8 onwards.

</para></listitem>
</varlistentry>

</variablelist>


</sect3>



  </sect2>
